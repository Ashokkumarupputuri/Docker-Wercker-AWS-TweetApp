# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
 
 box: nginx:latest
 
 build:
   # The steps that will be executed on build
   # Steps make up the actions in your pipeline
   
   steps:
     # A step that executes `npm install` command and tests it.
     - npm-install

 
     # A custom script step, name value is used in the UI
     # and the code value contains the command that get executed
     - script:
         name: echo nodejs information
         code: |
           echo "node version $(node -v) running"
           echo "npm version $(npm -v) running"
# note the indentation, this is still part of the build pipeline
   after-steps:                    
     - slack-notifier:
         url: $SLACK_URL
         username: werckerbot
         channel: notifications
 push-2-docker:
   box:
     id: nginx:latest
     cmd: /bin/sh
   
   steps:
     - script:
         name: get latest tag for deployment and clean image
         # make release tag
         # make internals and kubernetes avail for next step
         code: |
           cd $WERCKER_SOURCE_DIR
           mv /pipeline/source/index.html /usr/share/nginx/html
           mv /pipeline/source/linux.png /usr/share/nginx/html
           rm -r $WERCKER_SOURCE_DIR
           rm -r $WERCKER_CACHE_DIR
     - internal/docker-push:
         username: $DOCKER_USERNAME
         password: $DOCKER_PASSWORD
         # we want to push both the release image and as the latest
         tag: dev-$WERCKER_GIT_COMMIT dev-latest
         repository: devopscafe/tweet-app
         registry: https://registry.hub.docker.com
         ports: 80 443
         working-dir: /backend-people
         cmd: node server.js

 
